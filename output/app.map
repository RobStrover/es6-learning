{"version":3,"sources":["modules/TaskCollection.js","app.js"],"names":["TaskCollectionModule","tasks","tasls","console","log","TaskCollectionTitle","Person","name","greet","TaskCollection","forEach","task","index","Task","applyDiscount","cost","discount","sum","numbers","reduce","prev","current","sum2","x","y","nums","template","join","template2","getPerson","age","person","fname","moods","count","outputPerson","user","username","email","newEmail","newUsername","details","someone","changeEmail","someoneElse","register","getUsername","setUsername","strategy","handle","ConsoleLogger","dump"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA;;;AACT,kCAAyB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;;AAAA;;AACrB,SAAKC,KAAL,GAAaD,KAAb;AACH;;;;2BAEM;AACHE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH;;;;;;;AAGE,IAAII,mBAAmB,GAAG,oBAA1B;;;;;ACyKP;;;;;;;;;;;;;;IAnLMC;;;AAEF,kBAAYC,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;;;4BAEO;AACJ,aAAO,oBAAoB,KAAKA,IAAhC;AACH;;;;;;AAILJ,OAAO,CAACC,GAAR,CAAY,IAAIE,MAAJ,CAAW,aAAX,EAA0BE,KAA1B,EAAZ,GAGA;;IAEMC;;;AACF,4BAAwB;AAAA,QAAZR,KAAY,uEAAJ,EAAI;;AAAA;;AACpB,SAAKA,KAAL,GAAaA,KAAb;AACH;;;;0BAEK;AACF,WAAKA,KAAL,CAAWS,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP;AAAA,eAAiBT,OAAO,CAACC,GAAR,CAAY,+BAA+BO,IAA/B,GAAsC,gBAAtC,IAA0DC,KAAK,IAAE,CAAjE,CAAZ,CAAjB;AAAA,OAAnB;AACH;;;;KAGL;;;IAEMC;;;;AAEN,IAAIJ,cAAJ,CAAmB,CACf,IAAII,IAAJ,EADe,EACL,IAAIA,IAAJ,EADK,EACK,IAAIA,IAAJ,EADL,CAAnB,EAEGT,GAFH;;AAMA,SAASU,aAAT,CAAuBC,IAAvB,EAA6C;AAAA,MAAhBC,QAAgB,uEAAL,GAAK;AACzC,SAAOD,IAAI,GAAIA,IAAI,GAAGC,QAAtB;AACH;;AAEDb,OAAO,CAACC,GAAR,CAAYU,aAAa,CAAC,GAAD,CAAzB,GAGA;;AAGA,SAASG,GAAT,GAAyB;AAAA,oCAATC,OAAS;AAATA,IAAAA,OAAS;AAAA;;AACrB;AACA;AACA;AAEA,SAAOA,OAAO,CAACC,MAAR,CAAe,UAACC,IAAD,EAAOC,OAAP;AAAA,WAAmBD,IAAI,GAAGC,OAA1B;AAAA,GAAf,CAAP;AACH;;AAIDlB,OAAO,CAACC,GAAR,CAAYa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAf,GAEA;;AAGA,SAASK,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChB,SAAOD,CAAC,GAAGC,CAAX;AACH;;AAED,IAAIC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;AAEAtB,OAAO,CAACC,GAAR,CAAYkB,IAAI,MAAJ,SAAQG,IAAR,CAAZ,GAEA;;AAEA,IAAIC,QAAQ,GAAG,CACP,qBADO,EAEH,sBAFG,EAGP,MAHO,EAITC,IAJS,CAIJ,EAJI,CAAf;AAOA,IAAIpB,IAAI,GAAG,KAAX;AACA,IAAIqB,SAAS,uEAEerB,IAFf,qBAAb;AAMAJ,OAAO,CAACC,GAAR,CAAYsB,QAAZ,EAAsBE,SAAtB,GAEA;;AAEA,SAASC,SAAT,GAAqB;AAEjB,MAAItB,IAAI,GAAG,KAAX;AACA,MAAIuB,GAAG,GAAG,EAAV;AAEA,SAAO;AACHvB,IAAAA,IAAI,EAAJA,IADG;AAEHuB,IAAAA,GAAG,EAAHA,GAFG;AAGHtB,IAAAA,KAHG,mBAGK;AACJ,qCAAwBD,IAAxB,uBAAyCuB,GAAzC;AACH;AALE,GAAP;AAOH;;AAED3B,OAAO,CAACC,GAAR,CAAYyB,SAAS,GAAGrB,KAAZ,EAAZ,GAEA;;AAEA,IAAIuB,MAAM,GAAG;AACTC,EAAAA,KAAK,EAAE,KADE;AAETF,EAAAA,GAAG,EAAE,EAFI;AAGTG,EAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB,CAHE;AAITC,EAAAA,KAAK,EAAE;AAJE,CAAb;IAOMD,QAAiBF,OAAjBE;IAAOC,QAAUH,OAAVG;AACb/B,OAAO,CAACC,GAAR,CAAY6B,KAAZ,EAAmBC,KAAnB;;AAGA,SAASC,YAAT,OAAwC;AAAA,MAAhBH,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,KAAS,QAATA,KAAS;AACpC9B,EAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ,EAAmBC,KAAnB;AACH;;AAEDE,YAAY,CAACJ,MAAD,CAAZ,EAEA;;IAEMK;;;AACF,gBAAYC,QAAZ,EAAsBC,KAAtB,EAA6B;AAAA;;AACzB,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;;;gCAeWC,UAAU;AAClB,WAAKD,KAAL,GAAaC,QAAb;AACH;;;wBAXiB;AACd,aAAO,KAAKF,QAAZ;AACH;;;sBAEeG,aAAa;AACzBrC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,WAAKiC,QAAL,GAAgBG,WAAhB;AACH;;;+BAX2B;AAAA,yCAATC,OAAS;AAATA,QAAAA,OAAS;AAAA;;AACxB,wBAAWL,IAAX,EAAmBK,OAAnB;AACH;;;;;;AAgBL,IAAIC,OAAO,GAAG,IAAIN,IAAJ,CAAS,YAAT,EAAuB,iBAAvB,CAAd;AACAM,OAAO,CAACC,WAAR,CAAoB,sBAApB,GACA;;AACAxC,OAAO,CAACC,GAAR,CAAYsC,OAAZ;AAEA,IAAIE,WAAW,GAAGR,IAAI,CAACS,QAAL,CAAc,aAAd,EAA6B,yBAA7B,CAAlB;AACA1C,OAAO,CAACC,GAAR,CAAYwC,WAAZ;AAEAzC,OAAO,CAACC,GAAR,2BAA+BsC,OAAO,CAACI,WAAvC;AACAJ,OAAO,CAACK,WAAR,GAAsB,gBAAtB;AACA5C,OAAO,CAACC,GAAR,+BAAmCsC,OAAO,CAACI,WAA3C,IAEA;;AAEA,SAAS1C,GAAT,CAAa4C,QAAb,EAAuB;AACnBA,EAAAA,QAAQ,CAACC,MAAT;AACH;;IAEKC;;;;;;;;;6BACO;AACL/C,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;;;;;;AAGLA,GAAG,CAAC,IAAI8C,aAAJ,EAAD,CAAH,EAEA;;AAIA/C,OAAO,CAACC,GAAR,CAAYC,mCAAZ;AAEA,IAAIL,oCAAJ,CAAyB,CACrB,oBADqB,EAErB,oBAFqB,EAGrB,mBAHqB,CAAzB,EAIGmD,IAJH","file":"app.map","sourceRoot":"../src","sourcesContent":["export class TaskCollectionModule {\n    constructor (tasks = []) {\n        this.tasls = tasks;\n    }\n\n    dump() {\n        console.log(this.tasks);\n    }\n}\n\nexport let TaskCollectionTitle = 'My task Collection';","class Person {\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    greet() {\n        return \"Hi, my name is \" + this.name;\n    }\n\n}\n\nconsole.log(new Person('Rob Strover').greet());\n\n\n// ____________________________________________________________________\n\nclass TaskCollection {\n    constructor(tasks = []) {\n        this.tasks = tasks;\n    }\n\n    log() {\n        this.tasks.forEach((task, index) => console.log('blahh this task is blahh: ' + task + ' it is number ' + (index+=1)));\n    }\n}\n\n// ____________________________________________________________________\n\nclass Task {}\n\nnew TaskCollection([\n    new Task, new Task, new Task\n]).log();\n\n\n\nfunction applyDiscount(cost, discount = .10) {\n    return cost - (cost * discount);\n}\n\nconsole.log(applyDiscount(100));\n\n\n// ____________________________________________________________________\n\n\nfunction sum(...numbers) {\n    // return numbers.reduce(function(prev, current) {\n    //     return prev + current;\n    // })\n\n    return numbers.reduce((prev, current) => prev + current);\n}\n\n\n\nconsole.log(sum(1, 2, 3, 4, 5, 6));\n\n// ____________________________________________________________________\n\n\nfunction sum2(x, y) {\n    return x + y;\n}\n\nlet nums = [1, 2];\n\nconsole.log(sum2(...nums));\n\n// ____________________________________________________________________\n\nlet template = [\n        '<p class=\"message\">',\n            'Hello my name is Rob',\n        '</p>'\n    ].join('');\n\n\nlet name = 'Rob';\nlet template2 = `\n    '<p class=\"message\">',\n        'Hello my name is ${name}',\n    '</p>'\n`;\n\nconsole.log(template, template2);\n\n// ____________________________________________________________________\n\nfunction getPerson() {\n\n    let name = 'Rob';\n    let age = 25;\n\n    return {\n        name,\n        age,\n        greet() {\n            return `Hello my name ${name} and I am ${age} years old.`\n        }\n    };\n}\n\nconsole.log(getPerson().greet());\n\n// ____________________________________________________________________\n\nlet person = {\n    fname: 'Rob',\n    age: 25,\n    moods: ['happy', 'sad', 'angry'],\n    count: 3\n};\n\nlet { moods, count } = person;\nconsole.log(moods, count);\n\n\nfunction outputPerson({ fname, moods }) {\n    console.log(fname, moods);\n}\n\noutputPerson(person);\n\n// ____________________________________________________________________\n\nclass user {\n    constructor(username, email) {\n        this.username = username;\n        this.email = email;\n    }\n\n    static register(...details) {\n        return new user(...details);\n    }\n\n    get getUsername() {\n        return this.username;\n    }\n\n    set setUsername(newUsername) {\n        console.log('Changing the username...');\n        this.username = newUsername;\n    }\n\n    changeEmail(newEmail) {\n        this.email = newEmail;\n    }\n}\n\nlet someone = new user('RobStrover', 'blahh@gmail.com');\nsomeone.changeEmail('robstrover@gmail.com');\n// console.dir(someone);\nconsole.log(someone);\n\nlet someoneElse = user.register('RobStrover2', 'robstrover+01@gmail.com');\nconsole.log(someoneElse);\n\nconsole.log(`The username is ${someone.getUsername}`);\nsomeone.setUsername = 'ATestOfSetters';\nconsole.log(`The username is now ${someone.getUsername}`);\n\n// ____________________________________________________________________\n\nfunction log(strategy) {\n    strategy.handle();\n}\n\nclass ConsoleLogger{\n    handle() {\n        console.log('Using the console strategy to log');\n    }\n}\n\nlog(new ConsoleLogger);\n\n// ____________________________________________________________________\n\nimport { TaskCollectionModule, TaskCollectionTitle } from \"./modules/TaskCollection\";\n\nconsole.log(TaskCollectionTitle);\n\nnew TaskCollectionModule([\n    'Go eat some steak.',\n    'Go eat some chips.',\n    'Go eat some cake.'\n]).dump();"]}